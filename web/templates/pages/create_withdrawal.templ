package pages

import (
	"fmt"
	"event-ticketing-platform/internal/models"
	"event-ticketing-platform/web/templates/layouts"
)

// CreateWithdrawalPage renders the withdrawal creation form
templ CreateWithdrawalPage(user *models.User, availableBalance float64, formData map[string]interface{}, errors map[string]string) {
	@layouts.BaseLayout("Request Withdrawal - Event Ticketing Platform", user) {
		<div class="min-h-screen bg-gray-50 py-8">
			<div class="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8">
				<!-- Header -->
				<div class="mb-8">
					<div class="flex items-center justify-between">
						<div>
							<h1 class="text-3xl font-bold text-gray-900">Request Withdrawal</h1>
							<p class="mt-2 text-gray-600">Request a withdrawal from your available balance</p>
						</div>
						<a href="/organizer/withdrawals" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
							<svg class="mr-2 -ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
							</svg>
							Back to Withdrawals
						</a>
					</div>
				</div>

				<!-- Balance Card -->
				<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
					<div class="flex items-center justify-between">
						<div>
							<h3 class="text-lg font-medium text-gray-900">Available Balance</h3>
							<p class="text-sm text-gray-500">Amount available for withdrawal</p>
						</div>
						<div class="text-right">
							<p class="text-3xl font-bold text-green-600">${ fmt.Sprintf("%.2f", availableBalance) }</p>
							if availableBalance >= 10 {
								<p class="text-sm text-gray-500">Ready for withdrawal</p>
							} else {
								<p class="text-sm text-red-500">Minimum $10 required</p>
							}
						</div>
					</div>
				</div>

				<!-- Withdrawal Form -->
				<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
					if errors != nil && errors["general"] != "" {
						<div class="mb-6 bg-red-50 border border-red-200 rounded-md p-4">
							<div class="flex">
								<div class="flex-shrink-0">
									<svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
									</svg>
								</div>
								<div class="ml-3">
									<p class="text-sm text-red-800">{ errors["general"] }</p>
								</div>
							</div>
						</div>
					}

					<form method="POST" action="/organizer/withdrawals/create">
						<input type="hidden" name="csrf_token" value={ getCSRFToken(ctx) }/>
						
						<!-- Amount Field -->
						<div class="mb-6">
							<label for="amount" class="block text-sm font-medium text-gray-700 mb-2">
								Withdrawal Amount <span class="text-red-500">*</span>
							</label>
							<div class="relative">
								<div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
									<span class="text-gray-500 sm:text-sm">$</span>
								</div>
								<input 
									type="number" 
									name="amount" 
									id="amount" 
									step="0.01" 
									min="10" 
									max={ fmt.Sprintf("%.2f", availableBalance) }
									value={ func() string {
										if formData != nil && formData["amount"] != nil {
											if val, ok := formData["amount"].(string); ok {
												return val
											}
										}
										return ""
									}() }
									class={ "block w-full pl-7 pr-12 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
										templ.KV("border-red-300 text-red-900 placeholder-red-300 focus:ring-red-500 focus:border-red-500", errors != nil && errors["amount"] != ""),
										templ.KV("border-gray-300", errors == nil || errors["amount"] == "") }
									placeholder="0.00"
									required
								/>
								<div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
									<span class="text-gray-500 sm:text-sm">KES</span>
								</div>
							</div>
							if errors != nil && errors["amount"] != "" {
								<p class="mt-2 text-sm text-red-600">{ errors["amount"] }</p>
							}
							<p class="mt-2 text-sm text-gray-500">Minimum withdrawal amount is $10.00</p>
						</div>

						<!-- Reason Field -->
						<div class="mb-6">
							<label for="reason" class="block text-sm font-medium text-gray-700 mb-2">
								Reason for Withdrawal <span class="text-red-500">*</span>
							</label>
							<textarea 
								name="reason" 
								id="reason" 
								rows="3"
								maxlength="500"
								class={ "block w-full border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
									templ.KV("border-red-300 text-red-900 placeholder-red-300 focus:ring-red-500 focus:border-red-500", errors != nil && errors["reason"] != ""),
									templ.KV("border-gray-300", errors == nil || errors["reason"] == "") }
								placeholder="Please provide a reason for this withdrawal request..."
								required
							>{ func() string {
								if formData != nil && formData["reason"] != nil {
									if val, ok := formData["reason"].(string); ok {
										return val
									}
								}
								return ""
							}() }</textarea>
							if errors != nil && errors["reason"] != "" {
								<p class="mt-2 text-sm text-red-600">{ errors["reason"] }</p>
							}
							<p class="mt-2 text-sm text-gray-500">Maximum 500 characters</p>
						</div>

						<!-- Bank Details Field -->
						<div class="mb-6">
							<label for="bank_details" class="block text-sm font-medium text-gray-700 mb-2">
								Bank Details <span class="text-red-500">*</span>
							</label>
							<textarea 
								name="bank_details" 
								id="bank_details" 
								rows="4"
								maxlength="1000"
								class={ "block w-full border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
									templ.KV("border-red-300 text-red-900 placeholder-red-300 focus:ring-red-500 focus:border-red-500", errors != nil && errors["bank_details"] != ""),
									templ.KV("border-gray-300", errors == nil || errors["bank_details"] == "") }
								placeholder="Please provide your bank details including:&#10;- Bank Name&#10;- Account Name&#10;- Account Number&#10;- Routing Number (if applicable)&#10;- SWIFT Code (for international transfers)"
								required
							>{ func() string {
								if formData != nil && formData["bank_details"] != nil {
									if val, ok := formData["bank_details"].(string); ok {
										return val
									}
								}
								return ""
							}() }</textarea>
							if errors != nil && errors["bank_details"] != "" {
								<p class="mt-2 text-sm text-red-600">{ errors["bank_details"] }</p>
							}
							<p class="mt-2 text-sm text-gray-500">Please provide complete bank details for processing. Maximum 1000 characters.</p>
						</div>

						<!-- Important Notice -->
						<div class="mb-6 bg-yellow-50 border border-yellow-200 rounded-md p-4">
							<div class="flex">
								<div class="flex-shrink-0">
									<svg class="h-5 w-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
									</svg>
								</div>
								<div class="ml-3">
									<h3 class="text-sm font-medium text-yellow-800">Important Information</h3>
									<div class="mt-2 text-sm text-yellow-700">
										<ul class="list-disc list-inside space-y-1">
											<li>Withdrawal requests are processed within 3-5 business days</li>
											<li>You will receive an email confirmation once your request is submitted</li>
											<li>Processing fees may apply depending on your bank</li>
											<li>Ensure your bank details are accurate to avoid delays</li>
										</ul>
									</div>
								</div>
							</div>
						</div>

						<!-- Form Actions -->
						<div class="flex justify-end space-x-4">
							<a href="/organizer/withdrawals" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
								Cancel
							</a>
							<button 
								type="submit" 
								class={ "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",
									templ.KV("bg-gray-400 cursor-not-allowed", availableBalance < 10),
									templ.KV("bg-blue-600 hover:bg-blue-700", availableBalance >= 10) }
								disabled?={ availableBalance < 10 }
							>
								<svg class="mr-2 -ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
								</svg>
								Request Withdrawal
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	}
}