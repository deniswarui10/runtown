package pages

import "event-ticketing-platform/internal/models"
import "event-ticketing-platform/web/templates/layouts"
import "event-ticketing-platform/web/templates/components"
import "fmt"

templ DashboardPage(user *models.User, recentOrders []*models.Order, upcomingEvents []*models.Event) {
	@layouts.BaseLayout("Dashboard", user) {
		<div class="min-h-screen bg-gray-50">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<!-- Header -->
				<div class="mb-8">
					<h1 class="text-3xl font-bold text-gray-900">Welcome back, { user.FirstName }!</h1>
					<p class="text-gray-600 mt-2">Manage your account and view your event activity</p>
				</div>

				<!-- Quick Stats -->
				<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
					<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<svg class="h-8 w-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
								</svg>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Total Orders</p>
								<p class="text-2xl font-semibold text-gray-900">{ fmt.Sprintf("%d", len(recentOrders)) }</p>
							</div>
						</div>
					</div>

					<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<svg class="h-8 w-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
								</svg>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Upcoming Events</p>
								<p class="text-2xl font-semibold text-gray-900">{ fmt.Sprintf("%d", len(upcomingEvents)) }</p>
							</div>
						</div>
					</div>

					<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<svg class="h-8 w-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
								</svg>
							</div>
							<div class="ml-4">
								<p class="text-sm font-medium text-gray-500">Account Type</p>
								<p class="text-2xl font-semibold text-gray-900 capitalize">{ string(user.Role) }</p>
							</div>
						</div>
					</div>
				</div>

				<!-- Main Content Grid -->
				<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
					<!-- Recent Orders -->
					<div class="bg-white rounded-lg shadow-sm border border-gray-200">
						<div class="px-6 py-4 border-b border-gray-200">
							<div class="flex items-center justify-between">
								<h2 class="text-lg font-medium text-gray-900">Recent Orders</h2>
								<a href="/dashboard/orders" class="text-primary-600 hover:text-primary-500 text-sm font-medium">
									View all
								</a>
							</div>
						</div>
						<div class="p-6">
							if len(recentOrders) > 0 {
								<div class="space-y-4">
									for _, order := range recentOrders {
										@OrderSummaryCard(order)
									}
								</div>
							} else {
								<div class="text-center py-8">
									<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
									</svg>
									<h3 class="mt-2 text-sm font-medium text-gray-900">No orders yet</h3>
									<p class="mt-1 text-sm text-gray-500">Start by browsing events and purchasing tickets.</p>
									<div class="mt-6">
										<a href="/events" class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
											Browse Events
										</a>
									</div>
								</div>
							}
						</div>
					</div>

					<!-- Account Information -->
					<div class="bg-white rounded-lg shadow-sm border border-gray-200">
						<div class="px-6 py-4 border-b border-gray-200">
							<h2 class="text-lg font-medium text-gray-900">Account Information</h2>
						</div>
						<div class="p-6">
							<div class="space-y-4">
								<div>
									<label class="block text-sm font-medium text-gray-500">Full Name</label>
									<p class="mt-1 text-sm text-gray-900">{ user.FirstName } { user.LastName }</p>
								</div>
								<div>
									<label class="block text-sm font-medium text-gray-500">Email Address</label>
									<p class="mt-1 text-sm text-gray-900">{ user.Email }</p>
								</div>
								<div>
									<label class="block text-sm font-medium text-gray-500">Account Type</label>
									<p class="mt-1 text-sm text-gray-900 capitalize">{ string(user.Role) }</p>
								</div>
								<div>
									<label class="block text-sm font-medium text-gray-500">Member Since</label>
									<p class="mt-1 text-sm text-gray-900">{ user.CreatedAt.Format("January 2, 2006") }</p>
								</div>
							</div>
							
							<div class="mt-6 pt-6 border-t border-gray-200">
								<div class="flex space-x-3">
									<a href="/dashboard/profile" class="flex-1 bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium text-center transition-colors">
										Edit Profile
									</a>
									<a href="/dashboard/security" class="flex-1 bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg text-sm font-medium text-center transition-colors">
										Security
									</a>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Quick Actions -->
				<div class="mt-8">
					<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
						<h2 class="text-lg font-medium text-gray-900 mb-4">Quick Actions</h2>
						<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
							<a href="/events" class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
								<svg class="h-8 w-8 text-primary-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
								</svg>
								<div>
									<p class="text-sm font-medium text-gray-900">Browse Events</p>
									<p class="text-xs text-gray-500">Find new events</p>
								</div>
							</a>
							
							<a href="/dashboard/orders" class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
								<svg class="h-8 w-8 text-green-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
								</svg>
								<div>
									<p class="text-sm font-medium text-gray-900">My Orders</p>
									<p class="text-xs text-gray-500">View order history</p>
								</div>
							</a>
							
							if user.Role == models.RoleOrganizer || user.Role == models.RoleAdmin {
								<a href="/organizer/events" class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
									<svg class="h-8 w-8 text-blue-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
									</svg>
									<div>
										<p class="text-sm font-medium text-gray-900">My Events</p>
										<p class="text-xs text-gray-500">Manage events</p>
									</div>
								</a>
							}
							
							<a href="/dashboard/profile" class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
								<svg class="h-8 w-8 text-purple-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
								</svg>
								<div>
									<p class="text-sm font-medium text-gray-900">Profile Settings</p>
									<p class="text-xs text-gray-500">Update account</p>
								</div>
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ OrderSummaryCard(order *models.Order) {
	<div class="border border-gray-200 rounded-lg p-4">
		<div class="flex items-start justify-between">
			<div>
				<p class="text-sm font-medium text-gray-900">Order #{ order.OrderNumber }</p>
				<p class="text-xs text-gray-500 mt-1">{ order.CreatedAt.Format("Jan 2, 2006") }</p>
			</div>
			<span class={ "px-2 py-1 text-xs font-medium rounded-full",
				templ.KV("bg-green-100 text-green-800", order.Status == models.OrderCompleted),
				templ.KV("bg-yellow-100 text-yellow-800", order.Status == models.OrderPending),
				templ.KV("bg-red-100 text-red-800", order.Status == models.OrderCancelled || order.Status == models.OrderRefunded) }>
				{ string(order.Status) }
			</span>
		</div>
		<div class="mt-2">
			<p class="text-sm text-gray-600">${ fmt.Sprintf("%.2f", float64(order.TotalAmount)/100) }</p>
		</div>
		<div class="mt-3">
			<a href={ templ.URL(fmt.Sprintf("/dashboard/orders/%d", order.ID)) } class="text-primary-600 hover:text-primary-500 text-xs font-medium">
				View Details →
			</a>
		</div>
	</div>
}

templ OrdersPage(user *models.User, orders []*models.Order, events map[int]*models.Event) {
	@layouts.BaseLayout("My Orders", user) {
		<div class="min-h-screen bg-gray-50">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<!-- Header -->
				<div class="mb-8">
					<div class="flex items-center justify-between">
						<div>
							<h1 class="text-3xl font-bold text-gray-900">My Orders</h1>
							<p class="text-gray-600 mt-2">View and manage your event ticket orders</p>
						</div>
						<a href="/events" class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
							Browse Events
						</a>
					</div>
				</div>

				<!-- Orders List -->
				if len(orders) > 0 {
					<div class="space-y-6">
						for _, order := range orders {
							if event, exists := events[order.EventID]; exists {
								@components.OrderCard(order, event)
							}
						}
					</div>
				} else {
					<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-12 text-center">
						<svg class="mx-auto h-16 w-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
						</svg>
						<h3 class="mt-4 text-lg font-medium text-gray-900">No orders yet</h3>
						<p class="mt-2 text-gray-500">You haven't purchased any tickets yet. Start by browsing events.</p>
						<div class="mt-6">
							<a href="/events" class="bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition-colors">
								Browse Events
							</a>
						</div>
					</div>
				}
			</div>
		</div>
	}
}

templ OrderDetailsPage(user *models.User, order *models.Order, event *models.Event, tickets []*models.Ticket) {
	@layouts.BaseLayout("Order Details", user) {
		<div class="min-h-screen bg-gray-50">
			<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<!-- Header -->
				<div class="mb-8">
					<div class="flex items-center justify-between">
						<div>
							<h1 class="text-3xl font-bold text-gray-900">Order Details</h1>
							<p class="text-gray-600 mt-2">Order #{ order.OrderNumber }</p>
						</div>
						<a href="/dashboard/orders" class="text-primary-600 hover:text-primary-500 font-medium">
							← Back to Orders
						</a>
					</div>
				</div>

				<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
					<!-- Order Information -->
					<div class="lg:col-span-2">
						<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
							<h2 class="text-lg font-medium text-gray-900 mb-4">Event Information</h2>
							<div class="flex items-start space-x-4">
								if event.ImageURL != "" {
									<img src={ event.ImageURL } alt={ event.Title } class="w-20 h-20 rounded-lg object-cover"/>
								} else {
									<div class="w-20 h-20 bg-gradient-to-br from-primary-400 to-primary-600 rounded-lg flex items-center justify-center">
										<svg class="h-10 w-10 text-white opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
										</svg>
									</div>
								}
								<div>
									<h3 class="text-lg font-medium text-gray-900">{ event.Title }</h3>
									<p class="text-sm text-gray-500 mt-1">{ event.StartDate.Format("Monday, January 2, 2006 at 3:04 PM") }</p>
									<p class="text-sm text-gray-500">{ event.Location }</p>
								</div>
							</div>
						</div>

						<!-- Tickets -->
						<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
							<div class="flex items-center justify-between mb-4">
								<h2 class="text-lg font-medium text-gray-900">Your Tickets</h2>
								if order.Status == models.OrderCompleted {
									<a href={ templ.URL(fmt.Sprintf("/dashboard/orders/%d/tickets/download", order.ID)) } class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
										Download All Tickets
									</a>
								}
							</div>
							
							if len(tickets) > 0 {
								<div class="space-y-4">
									for i, ticket := range tickets {
										<div class="border border-gray-200 rounded-lg p-4">
											<div class="flex items-center justify-between">
												<div>
													<p class="text-sm font-medium text-gray-900">Ticket #{ fmt.Sprintf("%d", i+1) }</p>
													<p class="text-xs text-gray-500">{ ticket.QRCode }</p>
												</div>
												<span class={ "px-2 py-1 text-xs font-medium rounded-full",
													templ.KV("bg-green-100 text-green-800", ticket.Status == models.TicketActive),
													templ.KV("bg-gray-100 text-gray-800", ticket.Status == models.TicketUsed),
													templ.KV("bg-red-100 text-red-800", ticket.Status == models.TicketRefunded) }>
													{ string(ticket.Status) }
												</span>
											</div>
											if order.Status == models.OrderCompleted {
												<div class="mt-3">
													<a href={ templ.URL(fmt.Sprintf("/dashboard/tickets/%d/download", ticket.ID)) } class="text-primary-600 hover:text-primary-500 text-xs font-medium">
														Download Ticket →
													</a>
												</div>
											}
										</div>
									}
								</div>
							} else {
								<p class="text-gray-500 text-center py-4">No tickets found for this order.</p>
							}
						</div>
					</div>

					<!-- Order Summary -->
					<div class="lg:col-span-1">
						<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
							<h2 class="text-lg font-medium text-gray-900 mb-4">Order Summary</h2>
							
							<div class="space-y-3">
								<div class="flex justify-between text-sm">
									<span class="text-gray-500">Order Number:</span>
									<span class="text-gray-900 font-medium">{ order.OrderNumber }</span>
								</div>
								<div class="flex justify-between text-sm">
									<span class="text-gray-500">Order Date:</span>
									<span class="text-gray-900">{ order.CreatedAt.Format("Jan 2, 2006") }</span>
								</div>
								<div class="flex justify-between text-sm">
									<span class="text-gray-500">Status:</span>
									<span class={ "px-2 py-1 text-xs font-medium rounded-full",
										templ.KV("bg-green-100 text-green-800", order.Status == models.OrderCompleted),
										templ.KV("bg-yellow-100 text-yellow-800", order.Status == models.OrderPending),
										templ.KV("bg-red-100 text-red-800", order.Status == models.OrderCancelled || order.Status == models.OrderRefunded) }>
										{ string(order.Status) }
									</span>
								</div>
								<div class="flex justify-between text-sm">
									<span class="text-gray-500">Number of Tickets:</span>
									<span class="text-gray-900">{ fmt.Sprintf("%d", len(tickets)) }</span>
								</div>
								<div class="border-t border-gray-200 pt-3">
									<div class="flex justify-between">
										<span class="text-base font-medium text-gray-900">Total Amount:</span>
										<span class="text-base font-medium text-gray-900">${ fmt.Sprintf("%.2f", float64(order.TotalAmount)/100) }</span>
									</div>
								</div>
							</div>

							<div class="mt-6 pt-6 border-t border-gray-200">
								<h3 class="text-sm font-medium text-gray-900 mb-3">Billing Information</h3>
								<div class="space-y-2">
									<div class="text-sm">
										<span class="text-gray-500">Name:</span>
										<span class="text-gray-900 ml-2">{ order.BillingName }</span>
									</div>
									<div class="text-sm">
										<span class="text-gray-500">Email:</span>
										<span class="text-gray-900 ml-2">{ order.BillingEmail }</span>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}