package pages

import (
	"fmt"
	"strconv"
	"event-ticketing-platform/internal/services"
	"event-ticketing-platform/internal/models"
	"event-ticketing-platform/web/templates/layouts"
)

templ EventAnalytics(user *models.User, analytics *services.EventAnalyticsData) {
	@layouts.BaseLayout("Event Analytics", user) {
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<!-- Header -->
			<div class="mb-8">
				<div class="flex items-center justify-between">
					<div>
						<h1 class="text-3xl font-bold text-gray-900">{ analytics.Event.Title }</h1>
						<p class="mt-2 text-gray-600">Event Analytics & Reporting</p>
						<p class="text-sm text-gray-500">{ analytics.Event.StartDate.Format("January 2, 2006 at 3:04 PM") }</p>
					</div>
					<div class="flex space-x-3">
						<a href={ templ.URL(fmt.Sprintf("/organizer/events/%d/export-attendees", analytics.Event.ID)) } 
						   class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
							</svg>
							Export Attendees
						</a>
						<a href={ templ.URL(fmt.Sprintf("/organizer/events/%d/edit", analytics.Event.ID)) } 
						   class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
							</svg>
							Edit Event
						</a>
					</div>
				</div>
			</div>

			<!-- Key Metrics -->
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Total Revenue</dt>
								<dd class="text-lg font-medium text-gray-900">KSh { fmt.Sprintf("%.2f", analytics.TotalRevenue) }</dd>
							</dl>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Total Orders</dt>
								<dd class="text-lg font-medium text-gray-900">{ strconv.Itoa(analytics.TotalOrders) }</dd>
							</dl>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Tickets Sold</dt>
								<dd class="text-lg font-medium text-gray-900">{ strconv.Itoa(analytics.TotalTicketsSold) } / { strconv.Itoa(analytics.TotalTicketsAvailable) }</dd>
							</dl>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-orange-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Sold Out %</dt>
								<dd class="text-lg font-medium text-gray-900">{ fmt.Sprintf("%.1f", analytics.SoldOutPercentage) }%</dd>
							</dl>
						</div>
					</div>
				</div>
			</div>

			<!-- Charts and Breakdown -->
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
				<!-- Sales Over Time -->
				<div class="bg-white rounded-lg shadow p-6">
					<h3 class="text-lg font-medium text-gray-900 mb-4">Sales Over Time</h3>
					<div class="h-64 flex items-center justify-center bg-gray-50 rounded">
						<div class="text-center">
							<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
							</svg>
							<p class="mt-2 text-sm text-gray-500">Sales chart will be displayed here</p>
							<div class="mt-4 text-xs text-gray-400 max-h-32 overflow-y-auto">
								if len(analytics.SalesByDay) > 0 {
									for _, day := range analytics.SalesByDay {
										<div class="mb-1">{ day.Date }: KSh { fmt.Sprintf("%.2f", day.Revenue) } ({ strconv.Itoa(day.Orders) } orders)</div>
									}
								}
							</div>
						</div>
					</div>
				</div>

				<!-- Order Status Breakdown -->
				<div class="bg-white rounded-lg shadow p-6">
					<h3 class="text-lg font-medium text-gray-900 mb-4">Order Status Breakdown</h3>
					<div class="space-y-4">
						for status, count := range analytics.OrderStatusBreakdown {
							<div class="flex items-center justify-between">
								<div class="flex items-center">
									<div class={ "w-3 h-3 rounded-full mr-3",
										templ.KV("bg-green-500", status == "completed"),
										templ.KV("bg-yellow-500", status == "pending"),
										templ.KV("bg-red-500", status == "cancelled"),
										templ.KV("bg-gray-500", status == "refunded") }></div>
									<span class="text-sm font-medium text-gray-900 capitalize">{ status }</span>
								</div>
								<span class="text-sm text-gray-500">{ strconv.Itoa(count) }</span>
							</div>
						}
					</div>
				</div>
			</div>

			<!-- Ticket Type Performance -->
			<div class="bg-white rounded-lg shadow mb-8">
				<div class="px-6 py-4 border-b border-gray-200">
					<h3 class="text-lg font-medium text-gray-900">Ticket Type Performance</h3>
				</div>
				<div class="overflow-x-auto">
					<table class="min-w-full divide-y divide-gray-200">
						<thead class="bg-gray-50">
							<tr>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ticket Type</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Sold / Total</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Sold Out %</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Revenue</th>
							</tr>
						</thead>
						<tbody class="bg-white divide-y divide-gray-200">
							if len(analytics.TicketTypeBreakdown) > 0 {
								for _, ticketType := range analytics.TicketTypeBreakdown {
									<tr>
										<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{ ticketType.Name }</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">KSh { fmt.Sprintf("%.2f", ticketType.Price) }</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ strconv.Itoa(ticketType.TicketsSold) } / { strconv.Itoa(ticketType.TotalTickets) }</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<div class="flex items-center">
												<div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
													<div class="bg-blue-600 h-2 rounded-full" style={ fmt.Sprintf("width: %.1f%%", ticketType.SoldOutPercentage) }></div>
												</div>
												<span class="text-sm text-gray-500">{ fmt.Sprintf("%.1f", ticketType.SoldOutPercentage) }%</span>
											</div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">KSh { fmt.Sprintf("%.2f", ticketType.Revenue) }</td>
									</tr>
								}
							} else {
								<tr>
									<td colspan="5" class="px-6 py-8 text-center text-gray-500">No ticket types found</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>

			<!-- Recent Orders -->
			<div class="bg-white rounded-lg shadow mb-8">
				<div class="px-6 py-4 border-b border-gray-200">
					<h3 class="text-lg font-medium text-gray-900">Recent Orders</h3>
				</div>
				<div class="overflow-x-auto">
					<table class="min-w-full divide-y divide-gray-200">
						<thead class="bg-gray-50">
							<tr>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order #</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tickets</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
							</tr>
						</thead>
						<tbody class="bg-white divide-y divide-gray-200">
							if len(analytics.RecentOrders) > 0 {
								for _, order := range analytics.RecentOrders {
									<tr>
										<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{ order.Order.OrderNumber }</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ order.Order.BillingName }</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ strconv.Itoa(order.TicketCount) }</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">KSh { fmt.Sprintf("%.2f", order.Order.TotalAmountInCurrency()) }</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ order.Order.CreatedAt.Format("Jan 2, 2006") }</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<span class={ "inline-flex px-2 py-1 text-xs font-semibold rounded-full",
												templ.KV("bg-green-100 text-green-800", order.Order.Status == models.OrderCompleted),
												templ.KV("bg-yellow-100 text-yellow-800", order.Order.Status == models.OrderPending),
												templ.KV("bg-red-100 text-red-800", order.Order.Status == models.OrderCancelled),
												templ.KV("bg-gray-100 text-gray-800", order.Order.Status == models.OrderRefunded) }>
												{ string(order.Order.Status) }
											</span>
										</td>
									</tr>
								}
							} else {
								<tr>
									<td colspan="6" class="px-6 py-8 text-center text-gray-500">No orders found</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>

			<!-- Attendee Summary -->
			<div class="bg-white rounded-lg shadow">
				<div class="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
					<h3 class="text-lg font-medium text-gray-900">Attendee Summary</h3>
					<span class="text-sm text-gray-500">{ strconv.Itoa(len(analytics.AttendeeData)) } attendees</span>
				</div>
				<div class="p-6">
					if len(analytics.AttendeeData) > 0 {
						<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
							for i, attendee := range analytics.AttendeeData {
								if i < 6 {
									<div class="border border-gray-200 rounded-lg p-4">
										<p class="font-medium text-gray-900">{ attendee.BillingName }</p>
										<p class="text-sm text-gray-500">{ attendee.BillingEmail }</p>
										<div class="mt-2 flex items-center justify-between text-xs text-gray-500">
											<span>{ strconv.Itoa(attendee.TicketCount) } tickets</span>
											<span>KSh { fmt.Sprintf("%.2f", attendee.TotalAmount) }</span>
										</div>
									</div>
								}
							}
						</div>
						if len(analytics.AttendeeData) > 6 {
							<div class="mt-4 text-center">
								<p class="text-sm text-gray-500">And { strconv.Itoa(len(analytics.AttendeeData) - 6) } more attendees...</p>
								<a href={ templ.URL(fmt.Sprintf("/organizer/events/%d/export-attendees", analytics.Event.ID)) } 
								   class="mt-2 inline-flex items-center text-sm text-blue-600 hover:text-blue-500">
									Export full attendee list
									<svg class="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
									</svg>
								</a>
							</div>
						}
					} else {
						<div class="text-center py-8">
							<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
							</svg>
							<p class="mt-2 text-gray-500">No attendees yet</p>
							<p class="text-sm text-gray-400">Attendees will appear here once tickets are purchased</p>
						</div>
					}
				</div>
			</div>
		</div>
	}
}