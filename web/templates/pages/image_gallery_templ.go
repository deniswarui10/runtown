// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "event-ticketing-platform/internal/models"
import "event-ticketing-platform/web/templates/layouts"
import "fmt"
import "time"

// EventImage represents an image associated with an event
type EventImage struct {
	Key        string            `json:"key"`
	URL        string            `json:"url"`
	IsPrimary  bool              `json:"is_primary"`
	UploadedAt time.Time         `json:"uploaded_at"`
	Variants   map[string]string `json:"variants"`
}

func ImageGalleryPage(user *models.User, event *models.Event, images []EventImage) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\"><!-- Page Header --><div class=\"mb-8\"><div class=\"flex items-center justify-between\"><div><h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Manage Event Images</h1><p class=\"text-lg text-gray-600\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(event.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 25, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</p></div><a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 templ.SafeURL
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinURLErrs(templ.URL(fmt.Sprintf("/organizer/events/%d", event.ID)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 28, Col: 69}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" class=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\">Back to Event</a></div></div><!-- Upload Section --><div class=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8\"><h2 class=\"text-xl font-semibold text-gray-900 mb-4\">Upload New Image</h2><!-- Drag and Drop Upload Area --><div id=\"upload-area\" class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-primary-400 transition-colors cursor-pointer\" ondrop=\"handleDrop(event)\" ondragover=\"handleDragOver(event)\" ondragleave=\"handleDragLeave(event)\" onclick=\"document.getElementById('file-input').click()\"><svg class=\"mx-auto h-12 w-12 text-gray-400 mb-4\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"><path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg><p class=\"text-lg text-gray-600 mb-2\">Drag and drop your image here, or click to browse</p><p class=\"text-sm text-gray-500\">Supports JPEG, PNG, WebP up to 5MB</p><input type=\"file\" id=\"file-input\" accept=\"image/jpeg,image/png,image/webp\" class=\"hidden\" onchange=\"handleFileSelect(event)\"></div><!-- Upload Progress --><div id=\"upload-progress\" class=\"hidden mt-4\"><div class=\"bg-gray-200 rounded-full h-2\"><div id=\"progress-bar\" class=\"bg-primary-600 h-2 rounded-full transition-all duration-300\" style=\"width: 0%\"></div></div><p id=\"progress-text\" class=\"text-sm text-gray-600 mt-2\">Uploading...</p></div><!-- Image Processing Options --><div class=\"mt-6 border-t pt-6\"><h3 class=\"text-lg font-medium text-gray-900 mb-4\">Processing Options</h3><div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\"><div><label for=\"quality\" class=\"block text-sm font-medium text-gray-700 mb-1\">JPEG Quality</label> <select id=\"quality\" class=\"form-select w-full\"><option value=\"60\">60% (Smaller file)</option> <option value=\"75\">75% (Good quality)</option> <option value=\"85\" selected>85% (High quality)</option> <option value=\"95\">95% (Maximum quality)</option></select></div><div><label for=\"enable-webp\" class=\"block text-sm font-medium text-gray-700 mb-1\">WebP Support</label> <select id=\"enable-webp\" class=\"form-select w-full\"><option value=\"true\" selected>Enable WebP variants</option> <option value=\"false\">Disable WebP</option></select></div><div><label for=\"compression-level\" class=\"block text-sm font-medium text-gray-700 mb-1\">PNG Compression</label> <select id=\"compression-level\" class=\"form-select w-full\"><option value=\"3\">Low compression</option> <option value=\"6\" selected>Medium compression</option> <option value=\"9\">High compression</option></select></div></div></div></div><!-- Image Gallery --><div class=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\"><div class=\"flex items-center justify-between mb-6\"><h2 class=\"text-xl font-semibold text-gray-900\">Event Images</h2><span class=\"text-sm text-gray-500\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d image(s)", len(images)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 114, Col: 82}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(images) > 0 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div id=\"image-gallery\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for _, image := range images {
					templ_7745c5c3_Err = ImageCard(image, event.ID).Render(ctx, templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"text-center py-12\"><svg class=\"mx-auto h-12 w-12 text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path></svg><h3 class=\"text-lg font-medium text-gray-900 mb-2\">No images uploaded</h3><p class=\"text-gray-600\">Upload your first image to get started.</p></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div></div><!-- Image Preview Modal --> <div id=\"image-modal\" class=\"fixed inset-0 bg-black bg-opacity-75 hidden z-50\" onclick=\"closeImageModal()\"><div class=\"flex items-center justify-center min-h-screen p-4\"><div class=\"relative max-w-4xl max-h-full\"><img id=\"modal-image\" src=\"\" alt=\"\" class=\"max-w-full max-h-full object-contain\"> <button onclick=\"closeImageModal()\" class=\"absolute top-4 right-4 text-white hover:text-gray-300 text-2xl font-bold\">Ã—</button></div></div></div><!-- Confirmation Modal --> <div id=\"confirm-modal\" class=\"fixed inset-0 bg-black bg-opacity-50 hidden z-50\"><div class=\"flex items-center justify-center min-h-screen p-4\"><div class=\"bg-white rounded-lg p-6 max-w-md w-full\"><h3 id=\"confirm-title\" class=\"text-lg font-medium text-gray-900 mb-4\"></h3><p id=\"confirm-message\" class=\"text-gray-600 mb-6\"></p><div class=\"flex justify-end space-x-3\"><button onclick=\"closeConfirmModal()\" class=\"px-4 py-2 text-gray-600 hover:text-gray-800 font-medium\">Cancel</button> <button id=\"confirm-action\" class=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium\">Delete</button></div></div></div></div><script>\r\n\t\t\tlet currentEventId = { fmt.Sprintf(\"%d\", event.ID) };\r\n\t\t\tlet uploadInProgress = false;\r\n\r\n\t\t\t// Drag and drop handlers\r\n\t\t\tfunction handleDragOver(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tdocument.getElementById('upload-area').classList.add('border-primary-400', 'bg-primary-50');\r\n\t\t\t}\r\n\r\n\t\t\tfunction handleDragLeave(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tdocument.getElementById('upload-area').classList.remove('border-primary-400', 'bg-primary-50');\r\n\t\t\t}\r\n\r\n\t\t\tfunction handleDrop(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tdocument.getElementById('upload-area').classList.remove('border-primary-400', 'bg-primary-50');\r\n\t\t\t\t\r\n\t\t\t\tconst files = e.dataTransfer.files;\r\n\t\t\t\tif (files.length > 0) {\r\n\t\t\t\t\thandleFileUpload(files[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction handleFileSelect(e) {\r\n\t\t\t\tconst files = e.target.files;\r\n\t\t\t\tif (files.length > 0) {\r\n\t\t\t\t\thandleFileUpload(files[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction handleFileUpload(file) {\r\n\t\t\t\tif (uploadInProgress) {\r\n\t\t\t\t\talert('Upload already in progress');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Validate file\r\n\t\t\t\tif (!file.type.startsWith('image/')) {\r\n\t\t\t\t\talert('Please select an image file');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (file.size > 5 * 1024 * 1024) {\r\n\t\t\t\t\talert('File size must be less than 5MB');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuploadInProgress = true;\r\n\t\t\t\tshowUploadProgress();\r\n\r\n\t\t\t\t// Create form data\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('image', file);\r\n\t\t\t\tformData.append('quality', document.getElementById('quality').value);\r\n\t\t\t\tformData.append('enable_webp', document.getElementById('enable-webp').value);\r\n\t\t\t\tformData.append('compression_level', document.getElementById('compression-level').value);\r\n\r\n\t\t\t\t// Upload image\r\n\t\t\t\tfetch(`/organizer/events/${currentEventId}/images/upload`, {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t})\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\thideUploadProgress();\r\n\t\t\t\t\tuploadInProgress = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (data.success) {\r\n\t\t\t\t\t\tshowSuccessMessage('Image uploaded successfully');\r\n\t\t\t\t\t\t// Reload the page to show the new image\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tshowErrorMessage(data.error || 'Upload failed');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\thideUploadProgress();\r\n\t\t\t\t\tuploadInProgress = false;\r\n\t\t\t\t\tshowErrorMessage('Upload failed: ' + error.message);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction showUploadProgress() {\r\n\t\t\t\tdocument.getElementById('upload-progress').classList.remove('hidden');\r\n\t\t\t\t// Simulate progress for now - in a real implementation you'd track actual progress\r\n\t\t\t\tlet progress = 0;\r\n\t\t\t\tconst interval = setInterval(() => {\r\n\t\t\t\t\tprogress += 10;\r\n\t\t\t\t\tdocument.getElementById('progress-bar').style.width = progress + '%';\r\n\t\t\t\t\tif (progress >= 90) {\r\n\t\t\t\t\t\tclearInterval(interval);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 200);\r\n\t\t\t}\r\n\r\n\t\t\tfunction hideUploadProgress() {\r\n\t\t\t\tdocument.getElementById('upload-progress').classList.add('hidden');\r\n\t\t\t\tdocument.getElementById('progress-bar').style.width = '0%';\r\n\t\t\t}\r\n\r\n\t\t\tfunction deleteImage(imageKey) {\r\n\t\t\t\tshowConfirmModal(\r\n\t\t\t\t\t'Delete Image',\r\n\t\t\t\t\t'Are you sure you want to delete this image? This action cannot be undone.',\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tfetch(`/organizer/events/${currentEventId}/images/delete`, {\r\n\t\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tbody: JSON.stringify({ image_key: imageKey })\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(response => response.json())\r\n\t\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\t\tif (data.success) {\r\n\t\t\t\t\t\t\t\tshowSuccessMessage('Image deleted successfully');\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tshowErrorMessage(data.error || 'Delete failed');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tshowErrorMessage('Delete failed: ' + error.message);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tfunction replaceImage(imageKey) {\r\n\t\t\t\tconst input = document.createElement('input');\r\n\t\t\t\tinput.type = 'file';\r\n\t\t\t\tinput.accept = 'image/jpeg,image/png,image/webp';\r\n\t\t\t\tinput.onchange = function(e) {\r\n\t\t\t\t\tconst file = e.target.files[0];\r\n\t\t\t\t\tif (file) {\r\n\t\t\t\t\t\tconst formData = new FormData();\r\n\t\t\t\t\t\tformData.append('image', file);\r\n\t\t\t\t\t\tformData.append('old_image_key', imageKey);\r\n\t\t\t\t\t\tformData.append('quality', document.getElementById('quality').value);\r\n\t\t\t\t\t\tformData.append('enable_webp', document.getElementById('enable-webp').value);\r\n\t\t\t\t\t\tformData.append('compression_level', document.getElementById('compression-level').value);\r\n\r\n\t\t\t\t\t\tshowUploadProgress();\r\n\r\n\t\t\t\t\t\tfetch(`/organizer/events/${currentEventId}/images/replace`, {\r\n\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\tbody: formData\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(response => response.json())\r\n\t\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\t\thideUploadProgress();\r\n\t\t\t\t\t\t\tif (data.success) {\r\n\t\t\t\t\t\t\t\tshowSuccessMessage('Image replaced successfully');\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tshowErrorMessage(data.error || 'Replace failed');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\thideUploadProgress();\r\n\t\t\t\t\t\t\tshowErrorMessage('Replace failed: ' + error.message);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tinput.click();\r\n\t\t\t}\r\n\r\n\t\t\tfunction openImageModal(imageUrl) {\r\n\t\t\t\tdocument.getElementById('modal-image').src = imageUrl;\r\n\t\t\t\tdocument.getElementById('image-modal').classList.remove('hidden');\r\n\t\t\t}\r\n\r\n\t\t\tfunction closeImageModal() {\r\n\t\t\t\tdocument.getElementById('image-modal').classList.add('hidden');\r\n\t\t\t}\r\n\r\n\t\t\tfunction showConfirmModal(title, message, onConfirm) {\r\n\t\t\t\tdocument.getElementById('confirm-title').textContent = title;\r\n\t\t\t\tdocument.getElementById('confirm-message').textContent = message;\r\n\t\t\t\tdocument.getElementById('confirm-action').onclick = () => {\r\n\t\t\t\t\tcloseConfirmModal();\r\n\t\t\t\t\tonConfirm();\r\n\t\t\t\t};\r\n\t\t\t\tdocument.getElementById('confirm-modal').classList.remove('hidden');\r\n\t\t\t}\r\n\r\n\t\t\tfunction closeConfirmModal() {\r\n\t\t\t\tdocument.getElementById('confirm-modal').classList.add('hidden');\r\n\t\t\t}\r\n\r\n\t\t\tfunction showSuccessMessage(message) {\r\n\t\t\t\t// Create a temporary success message\r\n\t\t\t\tconst div = document.createElement('div');\r\n\t\t\t\tdiv.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50';\r\n\t\t\t\tdiv.textContent = message;\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.body.removeChild(div);\r\n\t\t\t\t}, 3000);\r\n\t\t\t}\r\n\r\n\t\t\tfunction showErrorMessage(message) {\r\n\t\t\t\t// Create a temporary error message\r\n\t\t\t\tconst div = document.createElement('div');\r\n\t\t\t\tdiv.className = 'fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50';\r\n\t\t\t\tdiv.textContent = message;\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.body.removeChild(div);\r\n\t\t\t\t}, 5000);\r\n\t\t\t}\r\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.BaseLayout(fmt.Sprintf("Manage Images - %s", event.Title), user).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ImageCard(image EventImage, eventID int) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div class=\"bg-gray-50 rounded-lg overflow-hidden\"><!-- Image Display --><div class=\"relative aspect-video\"><img src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(image.URL)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 405, Col: 19}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" alt=\"Event image\" class=\"w-full h-full object-cover cursor-pointer hover:opacity-90 transition-opacity\" data-image-url=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(image.URL)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 408, Col: 30}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" onclick=\"openImageModal(this.dataset.imageUrl)\"> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if image.IsPrimary {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<div class=\"absolute top-2 left-2\"><span class=\"bg-primary-600 text-white px-2 py-1 text-xs font-medium rounded\">Primary</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</div><!-- Image Info and Actions --><div class=\"p-4\"><div class=\"flex items-center justify-between mb-3\"><div class=\"text-sm text-gray-600\"><p>Uploaded ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(image.UploadedAt.Format("Jan 2, 2006"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 424, Col: 57}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</p><p class=\"text-xs text-gray-500\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 string
		templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d variants", len(image.Variants)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 425, Col: 87}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</p></div></div><!-- Responsive Image Variants --><div class=\"mb-4\"><h4 class=\"text-sm font-medium text-gray-700 mb-2\">Available Sizes</h4><div class=\"flex flex-wrap gap-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for variant, url := range image.Variants {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 templ.SafeURL
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinURLErrs(templ.URL(url))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 435, Col: 28}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "\" target=\"_blank\" class=\"px-2 py-1 bg-gray-200 hover:bg-gray-300 text-xs text-gray-700 rounded transition-colors\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(variant)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 439, Col: 16}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</div></div><!-- Actions --><div class=\"flex space-x-2\"><button data-image-key=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 string
		templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(image.Key)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 448, Col: 31}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\" onclick=\"replaceImage(this.dataset.imageKey)\" class=\"flex-1 bg-primary-600 hover:bg-primary-700 text-white px-3 py-2 rounded text-sm font-medium transition-colors\">Replace</button> <button data-image-key=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(image.Key)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/image_gallery.templ`, Line: 455, Col: 31}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "\" onclick=\"deleteImage(this.dataset.imageKey)\" class=\"flex-1 bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded text-sm font-medium transition-colors\">Delete</button></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
