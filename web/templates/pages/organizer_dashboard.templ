package pages

import (
	"fmt"
	"strconv"
	"event-ticketing-platform/internal/services"
	"event-ticketing-platform/internal/models"
	"event-ticketing-platform/web/templates/layouts"
)

templ OrganizerDashboard(user *models.User, dashboard *services.OrganizerDashboardData) {
	@layouts.BaseLayout("Organizer Dashboard", user) {
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<!-- Header -->
			<div class="mb-8">
				<h1 class="text-3xl font-bold text-gray-900">Dashboard</h1>
				<p class="mt-2 text-gray-600">Welcome back, { user.FirstName }! Here's an overview of your events.</p>
			</div>

			<!-- Stats Overview -->
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Total Events</dt>
								<dd class="text-lg font-medium text-gray-900">{ strconv.Itoa(dashboard.TotalEvents) }</dd>
							</dl>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Total Revenue</dt>
								<dd class="text-lg font-medium text-gray-900">KSh { fmt.Sprintf("%.2f", dashboard.TotalRevenue) }</dd>
							</dl>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Total Orders</dt>
								<dd class="text-lg font-medium text-gray-900">{ strconv.Itoa(dashboard.TotalOrders) }</dd>
							</dl>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow p-6">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="w-8 h-8 bg-orange-500 rounded-md flex items-center justify-center">
								<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
								</svg>
							</div>
						</div>
						<div class="ml-5 w-0 flex-1">
							<dl>
								<dt class="text-sm font-medium text-gray-500 truncate">Tickets Sold</dt>
								<dd class="text-lg font-medium text-gray-900">{ strconv.Itoa(dashboard.TotalTicketsSold) }</dd>
							</dl>
						</div>
					</div>
				</div>
			</div>

			<!-- Charts Section -->
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
				<!-- Revenue Chart -->
				<div class="bg-white rounded-lg shadow p-6">
					<h3 class="text-lg font-medium text-gray-900 mb-4">Revenue by Month</h3>
					<div class="h-64 flex items-center justify-center bg-gray-50 rounded">
						<div class="text-center">
							<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
							</svg>
							<p class="mt-2 text-sm text-gray-500">Revenue chart will be displayed here</p>
							<div class="mt-4 text-xs text-gray-400">
								if len(dashboard.RevenueByMonth) > 0 {
									for _, month := range dashboard.RevenueByMonth {
										<div class="mb-1">{ month.Month } { strconv.Itoa(month.Year) }: KSh { fmt.Sprintf("%.2f", month.Revenue) }</div>
									}
								}
							</div>
						</div>
					</div>
				</div>

				<!-- Sales Chart -->
				<div class="bg-white rounded-lg shadow p-6">
					<h3 class="text-lg font-medium text-gray-900 mb-4">Sales Over Time (Last 30 Days)</h3>
					<div class="h-64 flex items-center justify-center bg-gray-50 rounded">
						<div class="text-center">
							<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
							</svg>
							<p class="mt-2 text-sm text-gray-500">Sales chart will be displayed here</p>
							<div class="mt-4 text-xs text-gray-400">
								if len(dashboard.SalesOverTime) > 0 {
									for _, day := range dashboard.SalesOverTime {
										<div class="mb-1">{ day.Date }: KSh { fmt.Sprintf("%.2f", day.Revenue) } ({ strconv.Itoa(day.Orders) } orders)</div>
									}
								}
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- Recent Events and Top Events -->
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
				<!-- Recent Events -->
				<div class="bg-white rounded-lg shadow">
					<div class="px-6 py-4 border-b border-gray-200">
						<h3 class="text-lg font-medium text-gray-900">Recent Events</h3>
					</div>
					<div class="divide-y divide-gray-200">
						if len(dashboard.RecentEvents) > 0 {
							for _, event := range dashboard.RecentEvents {
								<div class="px-6 py-4">
									<div class="flex items-center justify-between">
										<div class="flex-1 min-w-0">
											<p class="text-sm font-medium text-gray-900 truncate">{ event.Title }</p>
											<p class="text-sm text-gray-500">{ event.StartDate.Format("Jan 2, 2006") }</p>
											<div class="mt-1 flex items-center space-x-4 text-xs text-gray-500">
												<span>{ strconv.Itoa(event.TicketsSold) } tickets sold</span>
												<span>KSh { fmt.Sprintf("%.2f", event.Revenue) } revenue</span>
											</div>
										</div>
										<div class="flex-shrink-0">
											<span class={ "inline-flex px-2 py-1 text-xs font-semibold rounded-full",
												templ.KV("bg-green-100 text-green-800", event.Status == models.StatusPublished),
												templ.KV("bg-yellow-100 text-yellow-800", event.Status == models.StatusDraft),
												templ.KV("bg-red-100 text-red-800", event.Status == models.StatusCancelled) }>
												{ string(event.Status) }
											</span>
										</div>
									</div>
								</div>
							}
						} else {
							<div class="px-6 py-8 text-center">
								<p class="text-gray-500">No events found</p>
							</div>
						}
					</div>
				</div>

				<!-- Top Performing Events -->
				<div class="bg-white rounded-lg shadow">
					<div class="px-6 py-4 border-b border-gray-200">
						<h3 class="text-lg font-medium text-gray-900">Top Performing Events</h3>
					</div>
					<div class="divide-y divide-gray-200">
						if len(dashboard.TopEvents) > 0 {
							for _, event := range dashboard.TopEvents {
								<div class="px-6 py-4">
									<div class="flex items-center justify-between">
										<div class="flex-1 min-w-0">
											<p class="text-sm font-medium text-gray-900 truncate">{ event.Title }</p>
											<p class="text-sm text-gray-500">{ event.StartDate.Format("Jan 2, 2006") }</p>
											<div class="mt-1 flex items-center space-x-4 text-xs text-gray-500">
												<span>{ strconv.Itoa(event.TicketsSold) }/{ strconv.Itoa(event.TotalTickets) } sold</span>
												<span>{ fmt.Sprintf("%.1f", event.ConversionRate) }% conversion</span>
											</div>
										</div>
										<div class="flex-shrink-0 text-right">
											<p class="text-sm font-medium text-gray-900">KSh { fmt.Sprintf("%.2f", event.Revenue) }</p>
											<p class="text-xs text-gray-500">{ strconv.Itoa(event.OrderCount) } orders</p>
										</div>
									</div>
								</div>
							}
						} else {
							<div class="px-6 py-8 text-center">
								<p class="text-gray-500">No events with sales found</p>
							</div>
						}
					</div>
				</div>
			</div>

			<!-- Quick Actions -->
			<div class="mt-8 bg-white rounded-lg shadow p-6">
				<h3 class="text-lg font-medium text-gray-900 mb-4">Quick Actions</h3>
				<div class="flex flex-wrap gap-4">
					<a href="/organizer/events/create" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
						</svg>
						Create New Event
					</a>
					<a href="/organizer/events" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
						</svg>
						Manage Events
					</a>
				</div>
			</div>
		</div>
	}
}