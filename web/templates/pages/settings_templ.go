// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "event-ticketing-platform/internal/models"
import "event-ticketing-platform/internal/services"
import "event-ticketing-platform/web/templates/layouts"

func SettingsPage(user *models.User, preferences *services.UserPreferences, errors map[string][]string, success bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"min-h-screen bg-gray-50\"><div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\"><!-- Header --><div class=\"mb-8\"><div class=\"flex items-center justify-between\"><div><h1 class=\"text-3xl font-bold text-gray-900\">Account Settings</h1><p class=\"text-gray-600 mt-2\">Manage your notification preferences and account settings</p></div><a href=\"/dashboard\" class=\"text-primary-600 hover:text-primary-500 font-medium\">‚Üê Back to Dashboard</a></div></div><!-- Navigation Tabs --><div class=\"mb-8\"><nav class=\"flex space-x-8\"><a href=\"/dashboard/profile\" class=\"border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 py-2 px-1 text-sm font-medium\">Profile</a> <a href=\"/dashboard/security\" class=\"border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 py-2 px-1 text-sm font-medium\">Security</a> <a href=\"/dashboard/settings\" class=\"border-b-2 border-primary-500 text-primary-600 py-2 px-1 text-sm font-medium\">Settings</a></nav></div><!-- Success Message -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if success {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"mb-6 bg-green-50 border border-green-200 rounded-lg p-4\"><div class=\"flex\"><svg class=\"h-5 w-5 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg><div class=\"ml-3\"><p class=\"text-sm font-medium text-green-800\">Settings updated successfully!</p></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Notification Preferences --><div class=\"bg-white rounded-lg shadow-sm border border-gray-200\"><div class=\"px-6 py-4 border-b border-gray-200\"><h2 class=\"text-lg font-medium text-gray-900\">Notification Preferences</h2><p class=\"text-sm text-gray-500 mt-1\">Choose how you want to be notified about events and updates.</p></div><form hx-post=\"/dashboard/settings\" hx-target=\"body\" hx-swap=\"outerHTML\" class=\"p-6\"><!-- General Errors -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if generalErrors, hasGeneral := errors["general"]; hasGeneral {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\"><div class=\"flex\"><svg class=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg><div class=\"ml-3\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for _, err := range generalErrors {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<p class=\"text-sm font-medium text-red-800\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var3 string
					templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(err)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/pages/settings.templ`, Line: 72, Col: 60}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</p>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"space-y-6\"><!-- Email Notifications --><div class=\"flex items-center justify-between\"><div class=\"flex-1\"><h3 class=\"text-sm font-medium text-gray-900\">Email Notifications</h3><p class=\"text-sm text-gray-500\">Receive important updates and notifications via email</p></div><label class=\"relative inline-flex items-center cursor-pointer\"><input type=\"checkbox\" name=\"email_notifications\" class=\"sr-only peer\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if preferences.EmailNotifications {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "><div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div></label></div><!-- Event Reminders --><div class=\"flex items-center justify-between\"><div class=\"flex-1\"><h3 class=\"text-sm font-medium text-gray-900\">Event Reminders</h3><p class=\"text-sm text-gray-500\">Get reminded about upcoming events you have tickets for</p></div><label class=\"relative inline-flex items-center cursor-pointer\"><input type=\"checkbox\" name=\"event_reminders\" class=\"sr-only peer\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if preferences.EventReminders {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "><div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div></label></div><!-- Marketing Emails --><div class=\"flex items-center justify-between\"><div class=\"flex-1\"><h3 class=\"text-sm font-medium text-gray-900\">Marketing Emails</h3><p class=\"text-sm text-gray-500\">Receive promotional emails about new events and special offers</p></div><label class=\"relative inline-flex items-center cursor-pointer\"><input type=\"checkbox\" name=\"marketing_emails\" class=\"sr-only peer\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if preferences.MarketingEmails {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "><div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div></label></div><!-- SMS Notifications --><div class=\"flex items-center justify-between\"><div class=\"flex-1\"><h3 class=\"text-sm font-medium text-gray-900\">SMS Notifications</h3><p class=\"text-sm text-gray-500\">Receive text messages for urgent updates and reminders</p></div><label class=\"relative inline-flex items-center cursor-pointer\"><input type=\"checkbox\" name=\"sms_notifications\" class=\"sr-only peer\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if preferences.SMSNotifications {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "><div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div></label></div><!-- Newsletter Subscription --><div class=\"flex items-center justify-between\"><div class=\"flex-1\"><h3 class=\"text-sm font-medium text-gray-900\">Newsletter Subscription</h3><p class=\"text-sm text-gray-500\">Subscribe to our monthly newsletter with event highlights and tips</p></div><label class=\"relative inline-flex items-center cursor-pointer\"><input type=\"checkbox\" name=\"newsletter_subscription\" class=\"sr-only peer\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if preferences.NewsletterSubscription {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "><div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div></label></div></div><!-- Submit Button --><div class=\"mt-8 flex justify-end space-x-3\"><a href=\"/dashboard\" class=\"px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\">Cancel</a> <button type=\"submit\" class=\"px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg text-sm font-medium transition-colors\">Save Preferences</button></div></form></div><!-- Account Preferences --><div class=\"mt-8 bg-white rounded-lg shadow-sm border border-gray-200\"><div class=\"px-6 py-4 border-b border-gray-200\"><h2 class=\"text-lg font-medium text-gray-900\">Account Preferences</h2></div><div class=\"p-6\"><div class=\"space-y-4\"><div class=\"flex items-center justify-between py-3 border-b border-gray-200\"><div><h3 class=\"text-sm font-medium text-gray-900\">Language</h3><p class=\"text-sm text-gray-500\">Choose your preferred language</p></div><select class=\"text-sm border border-gray-300 rounded-lg px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"><option value=\"en\" selected>English</option> <option value=\"es\">Espa√±ol</option> <option value=\"fr\">Fran√ßais</option></select></div><div class=\"flex items-center justify-between py-3 border-b border-gray-200\"><div><h3 class=\"text-sm font-medium text-gray-900\">Timezone</h3><p class=\"text-sm text-gray-500\">Events will be displayed in your local time</p></div><select class=\"text-sm border border-gray-300 rounded-lg px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"><option value=\"UTC\" selected>UTC</option> <option value=\"America/New_York\">Eastern Time</option> <option value=\"America/Chicago\">Central Time</option> <option value=\"America/Denver\">Mountain Time</option> <option value=\"America/Los_Angeles\">Pacific Time</option></select></div><div class=\"flex items-center justify-between py-3\"><div><h3 class=\"text-sm font-medium text-gray-900\">Currency</h3><p class=\"text-sm text-gray-500\">Default currency for displaying prices</p></div><select class=\"text-sm border border-gray-300 rounded-lg px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"><option value=\"KES\" selected>KES (KSh)</option> <option value=\"USD\">USD ($)</option> <option value=\"EUR\">EUR (‚Ç¨)</option> <option value=\"GBP\">GBP (¬£)</option></select></div></div></div></div><!-- Privacy Settings --><div class=\"mt-8 bg-white rounded-lg shadow-sm border border-gray-200\"><div class=\"px-6 py-4 border-b border-gray-200\"><h2 class=\"text-lg font-medium text-gray-900\">Privacy Settings</h2></div><div class=\"p-6\"><div class=\"space-y-4\"><div class=\"flex items-center justify-between py-3 border-b border-gray-200\"><div><h3 class=\"text-sm font-medium text-gray-900\">Profile Visibility</h3><p class=\"text-sm text-gray-500\">Control who can see your profile information</p></div><select class=\"text-sm border border-gray-300 rounded-lg px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500\"><option value=\"private\" selected>Private</option> <option value=\"public\">Public</option> <option value=\"friends\">Friends Only</option></select></div><div class=\"flex items-center justify-between py-3\"><div><h3 class=\"text-sm font-medium text-gray-900\">Data Export</h3><p class=\"text-sm text-gray-500\">Download a copy of your account data</p></div><button class=\"text-primary-600 hover:text-primary-500 text-sm font-medium\">Request Export</button></div></div></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.BaseLayout("Account Settings", user).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
